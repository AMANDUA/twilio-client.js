{"version":3,"file":"regions.js","sourceRoot":"","sources":["../../lib/twilio/regions.ts"],"names":[],"mappings":";;;AAOA;;;;GAIG;AACH,IAAY,gBAQX;AARD,WAAY,gBAAgB;IAC1B,6BAAS,CAAA;IACT,6BAAS,CAAA;IACT,6BAAS,CAAA;IACT,6BAAS,CAAA;IACT,6BAAS,CAAA;IACT,kCAAc,CAAA;IACd,kCAAc,CAAA;AAChB,CAAC,EARW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAQ3B;AAED;;;;;;;GAOG;AACH,IAAY,MAiBX;AAjBD,WAAY,MAAM;IAChB,qBAAW,CAAA;IACX,qBAAW,CAAA;IACX,qBAAW,CAAA;IACX,0BAAgB,CAAA;IAChB,qBAAW,CAAA;IACX,qBAAW,CAAA;IACX,0BAAgB,CAAA;IAChB,4BAAkB,CAAA;IAClB,qBAAW,CAAA;IACX,qBAAW,CAAA;IACX,qBAAW,CAAA;IACX,0BAAgB,CAAA;IAChB,4BAAkB,CAAA;IAClB,qBAAW,CAAA;IACX,0BAAgB,CAAA;IAChB,4BAAkB,CAAA;AACpB,CAAC,EAjBW,MAAM,GAAN,cAAM,KAAN,cAAM,QAiBjB;AAQD;;GAEG;AACU,QAAA,iBAAiB;IAC5B,GAAC,gBAAgB,CAAC,EAAE,IAAG,MAAM,CAAC,GAAG;IACjC,GAAC,gBAAgB,CAAC,EAAE,IAAG,MAAM,CAAC,GAAG;IACjC,GAAC,gBAAgB,CAAC,EAAE,IAAG,MAAM,CAAC,GAAG;IACjC,GAAC,gBAAgB,CAAC,EAAE,IAAG,MAAM,CAAC,GAAG;IACjC,GAAC,gBAAgB,CAAC,EAAE,IAAG,MAAM,CAAC,GAAG;IACjC,GAAC,gBAAgB,CAAC,IAAI,IAAG,MAAM,CAAC,GAAG;IACnC,GAAC,gBAAgB,CAAC,IAAI,IAAG,MAAM,CAAC,GAAG;QACnC;AAEF;;;GAGG;AACU,QAAA,gBAAgB,GAAgC;IAC3D,iBAAiB,EAAE,MAAM,CAAC,GAAG;IAC7B,cAAc,EAAE,MAAM,CAAC,GAAG;IAC1B,aAAa,EAAE,MAAM,CAAC,GAAG;IACzB,YAAY,EAAE,MAAM,CAAC,GAAG;IACxB,UAAU,EAAE,MAAM,CAAC,GAAG;IACtB,uBAAuB,EAAE,MAAM,CAAC,GAAG;IACnC,gBAAgB,EAAE,MAAM,CAAC,GAAG;IAC5B,cAAc,EAAE,MAAM,CAAC,GAAG;CAC3B,CAAC;AAEF;;;GAGG;AACH,IAAM,UAAU;IACd,GAAC,MAAM,CAAC,GAAG,IAAG,iCAAiC;IAC/C,GAAC,MAAM,CAAC,GAAG,IAAG,iCAAiC;IAC/C,GAAC,MAAM,CAAC,GAAG,IAAG,iCAAiC;IAC/C,GAAC,MAAM,CAAC,KAAK,IAAG,oCAAoC;IACpD,GAAC,MAAM,CAAC,GAAG,IAAG,6BAA6B;IAC3C,GAAC,MAAM,CAAC,GAAG,IAAG,iCAAiC;IAC/C,GAAC,MAAM,CAAC,KAAK,IAAG,oCAAoC;IACpD,GAAC,MAAM,CAAC,MAAM,IAAG,qCAAqC;IACtD,GAAC,MAAM,CAAC,GAAG,IAAG,iCAAiC;IAC/C,GAAC,MAAM,CAAC,GAAG,IAAG,iCAAiC;IAC/C,GAAC,MAAM,CAAC,GAAG,IAAG,iCAAiC;IAC/C,GAAC,MAAM,CAAC,KAAK,IAAG,oCAAoC;IACpD,GAAC,MAAM,CAAC,MAAM,IAAG,qCAAqC;IACtD,GAAC,MAAM,CAAC,GAAG,IAAG,iCAAiC;IAC/C,GAAC,MAAM,CAAC,KAAK,IAAG,oCAAoC;IACpD,GAAC,MAAM,CAAC,MAAM,IAAG,qCAAqC;OACvD,CAAC;AAEF;;;;GAIG;AACU,QAAA,aAAa,GAAW,KAAK,CAAC;AAE3C;;;;;;;GAOG;AACH,SAAgB,YAAY,CAAC,MAAe,EAAE,YAA0C;IACtF,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,qBAAa,EAAE;QACpD,OAAO,6BAA6B,CAAC;KACtC;IAED,IAAM,SAAS,GAAG,yBAAiB,CAAC,MAA0B,CAAC,CAAC;IAChE,IAAI,SAAS,EAAE;QACb,MAAM,GAAG,SAAS,CAAC;QACnB,IAAI,YAAY,EAAE;YAChB,mDAAmD;YACnD,UAAU,CAAC,cAAM,OAAA,YAAY,CAAC,SAAS,CAAC,EAAvB,CAAuB,CAAC,CAAC;SAC3C;KACF;IAED,OAAO,sBAAoB,MAAM,gBAAa,CAAC;AACjD,CAAC;AAfD,oCAeC;AAED;;;;;GAKG;AACH,SAAgB,kBAAkB,CAAC,MAAc;IAC/C,OAAO,wBAAgB,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;AAC1C,CAAC;AAFD,gDAEC","sourcesContent":["/**\n * @module Voice\n * This module describes valid and deprecated regions.\n */\nimport { InvalidArgumentError } from './errors';\nimport { Exception } from './util';\n\n/**\n * Valid deprecated regions.\n *\n * @private\n */\nexport enum DeprecatedRegion {\n  Au = 'au',\n  Br = 'br',\n  Ie = 'ie',\n  Jp = 'jp',\n  Sg = 'sg',\n  UsOr = 'us-or',\n  UsVa = 'us-va',\n}\n\n/**\n * Valid current regions.\n *\n * @deprecated CLIENT-6831\n * This is no longer used or updated for checking validity of regions in the\n * SDK. We now allow any string to be passed for region. Invalid regions won't\n * be able to connect, and won't throw an exception.\n */\nexport enum Region {\n  Au1 = 'au1',\n  Br1 = 'br1',\n  De1 = 'de1',\n  De1Ix = 'de1-ix',\n  Gll = 'gll',\n  Ie1 = 'ie1',\n  Ie1Ix = 'ie1-ix',\n  Ie1Tnx = 'ie1-tnx',\n  Jp1 = 'jp1',\n  Sg1 = 'sg1',\n  Us1 = 'us1',\n  Us1Ix = 'us1-ix',\n  Us1Tnx = 'us1-tnx',\n  Us2 = 'us2',\n  Us2Ix = 'us2-ix',\n  Us2Tnx = 'us2-tnx',\n}\n\n/**\n * All valid regions\n * @private\n */\nexport type ValidRegion = Region | DeprecatedRegion;\n\n/**\n * Deprecated regions. Maps the deprecated region to its equivalent up-to-date region.\n */\nexport const deprecatedRegions: Record<DeprecatedRegion, Region> = {\n  [DeprecatedRegion.Au]: Region.Au1,\n  [DeprecatedRegion.Br]: Region.Br1,\n  [DeprecatedRegion.Ie]: Region.Ie1,\n  [DeprecatedRegion.Jp]: Region.Jp1,\n  [DeprecatedRegion.Sg]: Region.Sg1,\n  [DeprecatedRegion.UsOr]: Region.Us1,\n  [DeprecatedRegion.UsVa]: Region.Us1,\n};\n\n/**\n * Region shortcodes. Maps the full region name from AWS to the Twilio shortcode.\n * @private\n */\nexport const regionShortcodes: { [index: string]: Region } = {\n  ASIAPAC_SINGAPORE: Region.Sg1,\n  ASIAPAC_SYDNEY: Region.Au1,\n  ASIAPAC_TOKYO: Region.Jp1,\n  EU_FRANKFURT: Region.De1,\n  EU_IRELAND: Region.Ie1,\n  SOUTH_AMERICA_SAO_PAULO: Region.Br1,\n  US_EAST_VIRGINIA: Region.Us1,\n  US_WEST_OREGON: Region.Us2,\n};\n\n/**\n * Region URIs. Maps the Twilio shortcode to its Twilio endpoint URI.\n * @private\n */\nconst regionURIs: Record<Region, string> = {\n  [Region.Au1]: 'chunderw-vpc-gll-au1.twilio.com',\n  [Region.Br1]: 'chunderw-vpc-gll-br1.twilio.com',\n  [Region.De1]: 'chunderw-vpc-gll-de1.twilio.com',\n  [Region.De1Ix]: 'chunderw-vpc-gll-de1-ix.twilio.com',\n  [Region.Gll]: 'chunderw-vpc-gll.twilio.com',\n  [Region.Ie1]: 'chunderw-vpc-gll-ie1.twilio.com',\n  [Region.Ie1Ix]: 'chunderw-vpc-gll-ie1-ix.twilio.com',\n  [Region.Ie1Tnx]: 'chunderw-vpc-gll-ie1-tnx.twilio.com',\n  [Region.Jp1]: 'chunderw-vpc-gll-jp1.twilio.com',\n  [Region.Sg1]: 'chunderw-vpc-gll-sg1.twilio.com',\n  [Region.Us1]: 'chunderw-vpc-gll-us1.twilio.com',\n  [Region.Us1Ix]: 'chunderw-vpc-gll-us1-ix.twilio.com',\n  [Region.Us1Tnx]: 'chunderw-vpc-gll-us1-tnx.twilio.com',\n  [Region.Us2]: 'chunderw-vpc-gll-us2.twilio.com',\n  [Region.Us2Ix]: 'chunderw-vpc-gll-us2-ix.twilio.com',\n  [Region.Us2Tnx]: 'chunderw-vpc-gll-us2-tnx.twilio.com',\n};\n\n/**\n * The default region to connect to and create a chunder uri from if region is\n * not defined.\n * @constant\n */\nexport const defaultRegion: string = 'gll';\n\n/**\n * Get the URI associated with the passed shortcode.\n *\n * @private\n * @param region - The region shortcode. Defaults to gll.\n * @param [onDeprecated] - A callback containing the new region to be called when the passed region\n *   is deprecated.\n */\nexport function getRegionURI(region?: string, onDeprecated?: (newRegion: string) => void): string {\n  if (region === undefined || region === defaultRegion) {\n    return `chunderw-vpc-gll.twilio.com`;\n  }\n\n  const newRegion = deprecatedRegions[region as DeprecatedRegion];\n  if (newRegion) {\n    region = newRegion;\n    if (onDeprecated) {\n      // Don't let this callback affect script execution.\n      setTimeout(() => onDeprecated(newRegion));\n    }\n  }\n\n  return `chunderw-vpc-gll-${region}.twilio.com`;\n}\n\n/**\n * Get the region shortcode by its full AWS region string.\n *\n * @private\n * @param region - The region's full AWS string.\n */\nexport function getRegionShortcode(region: string): Region | null {\n  return regionShortcodes[region] || null;\n}\n"]}